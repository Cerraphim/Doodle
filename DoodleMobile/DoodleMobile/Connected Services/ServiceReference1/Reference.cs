//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTO_Users", Namespace="http://schemas.datacontract.org/2004/07/DoodleModel")]
    public partial class DTO_Users : object
    {
        
        private bool ActiveField;
        
        private string DisplayNameField;
        
        private string EmailAddressField;
        
        private int IDField;
        
        private string PasswordField;
        
        private string PictureField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active
        {
            get
            {
                return this.ActiveField;
            }
            set
            {
                this.ActiveField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName
        {
            get
            {
                return this.DisplayNameField;
            }
            set
            {
                this.DisplayNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress
        {
            get
            {
                return this.EmailAddressField;
            }
            set
            {
                this.EmailAddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password
        {
            get
            {
                return this.PasswordField;
            }
            set
            {
                this.PasswordField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Picture
        {
            get
            {
                return this.PictureField;
            }
            set
            {
                this.PictureField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTO_Login", Namespace="http://schemas.datacontract.org/2004/07/DoodleModel")]
    public partial class DTO_Login : object
    {
        
        private string EmailField;
        
        private float LatitudeField;
        
        private float LongitudeField;
        
        private string PasswordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Latitude
        {
            get
            {
                return this.LatitudeField;
            }
            set
            {
                this.LatitudeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Longitude
        {
            get
            {
                return this.LongitudeField;
            }
            set
            {
                this.LongitudeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password
        {
            get
            {
                return this.PasswordField;
            }
            set
            {
                this.PasswordField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTO_OpenDraws", Namespace="http://schemas.datacontract.org/2004/07/DoodleModel")]
    public partial class DTO_OpenDraws : object
    {
        
        private string DoodlerField;
        
        private string DrawCategoryNameField;
        
        private int DrawIDField;
        
        private string DrawStatusDescField;
        
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Doodler
        {
            get
            {
                return this.DoodlerField;
            }
            set
            {
                this.DoodlerField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrawCategoryName
        {
            get
            {
                return this.DrawCategoryNameField;
            }
            set
            {
                this.DrawCategoryNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrawID
        {
            get
            {
                return this.DrawIDField;
            }
            set
            {
                this.DrawIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrawStatusDesc
        {
            get
            {
                return this.DrawStatusDescField;
            }
            set
            {
                this.DrawStatusDescField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime
        {
            get
            {
                return this.StartTimeField;
            }
            set
            {
                this.StartTimeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTO_Guess", Namespace="http://schemas.datacontract.org/2004/07/DoodleModel")]
    public partial class DTO_Guess : object
    {
        
        private int DrawIDField;
        
        private string GuessField;
        
        private bool IsCorrectField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrawID
        {
            get
            {
                return this.DrawIDField;
            }
            set
            {
                this.DrawIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Guess
        {
            get
            {
                return this.GuessField;
            }
            set
            {
                this.GuessField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCorrect
        {
            get
            {
                return this.IsCorrectField;
            }
            set
            {
                this.IsCorrectField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTO_JoinDraw", Namespace="http://schemas.datacontract.org/2004/07/DoodleModel")]
    public partial class DTO_JoinDraw : object
    {
        
        private int DrawIDField;
        
        private int NoodlerIDField;
        
        private int UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrawID
        {
            get
            {
                return this.DrawIDField;
            }
            set
            {
                this.DrawIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NoodlerID
        {
            get
            {
                return this.NoodlerIDField;
            }
            set
            {
                this.NoodlerIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID
        {
            get
            {
                return this.UserIDField;
            }
            set
            {
                this.UserIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTO_Winner", Namespace="http://schemas.datacontract.org/2004/07/DoodleModel")]
    public partial class DTO_Winner : object
    {
        
        private int NoodlerIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NoodlerID
        {
            get
            {
                return this.NoodlerIDField;
            }
            set
            {
                this.NoodlerIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTO_NewDraw", Namespace="http://schemas.datacontract.org/2004/07/DoodleModel")]
    public partial class DTO_NewDraw : object
    {
        
        private string AnswerField;
        
        private int DoodlerIDField;
        
        private int DrawCategoryIDField;
        
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Answer
        {
            get
            {
                return this.AnswerField;
            }
            set
            {
                this.AnswerField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DoodlerID
        {
            get
            {
                return this.DoodlerIDField;
            }
            set
            {
                this.DoodlerIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DrawCategoryID
        {
            get
            {
                return this.DrawCategoryIDField;
            }
            set
            {
                this.DrawCategoryIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime
        {
            get
            {
                return this.StartTimeField;
            }
            set
            {
                this.StartTimeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTO_GameCategory", Namespace="http://schemas.datacontract.org/2004/07/DoodleModel")]
    public partial class DTO_GameCategory : object
    {
        
        private int CategoryIDField;
        
        private string CategoryNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID
        {
            get
            {
                return this.CategoryIDField;
            }
            set
            {
                this.CategoryIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName
        {
            get
            {
                return this.CategoryNameField;
            }
            set
            {
                this.CategoryNameField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDoodleUser", ReplyAction="http://tempuri.org/IService1/GetDoodleUserResponse")]
        System.Threading.Tasks.Task<string> GetDoodleUserAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddUser", ReplyAction="http://tempuri.org/IService1/AddUserResponse")]
        System.Threading.Tasks.Task<ServiceReference1.DTO_Users> AddUserAsync(ServiceReference1.DTO_Users u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllUsers", ReplyAction="http://tempuri.org/IService1/GetAllUsersResponse")]
        System.Threading.Tasks.Task<ServiceReference1.DTO_Users[]> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        System.Threading.Tasks.Task<ServiceReference1.DTO_Users> LoginAsync(ServiceReference1.DTO_Login login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GatherOpenDraws", ReplyAction="http://tempuri.org/IService1/GatherOpenDrawsResponse")]
        System.Threading.Tasks.Task<ServiceReference1.DTO_OpenDraws[]> GatherOpenDrawsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckGuess", ReplyAction="http://tempuri.org/IService1/CheckGuessResponse")]
        System.Threading.Tasks.Task<ServiceReference1.DTO_Guess> CheckGuessAsync(ServiceReference1.DTO_Guess guess);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/JoinDraw", ReplyAction="http://tempuri.org/IService1/JoinDrawResponse")]
        System.Threading.Tasks.Task<ServiceReference1.DTO_JoinDraw> JoinDrawAsync(ServiceReference1.DTO_JoinDraw join);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SetWinner", ReplyAction="http://tempuri.org/IService1/SetWinnerResponse")]
        System.Threading.Tasks.Task<ServiceReference1.DTO_Winner> SetWinnerAsync(ServiceReference1.DTO_Winner winner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateDraw", ReplyAction="http://tempuri.org/IService1/CreateDrawResponse")]
        System.Threading.Tasks.Task<ServiceReference1.DTO_OpenDraws> CreateDrawAsync(ServiceReference1.DTO_NewDraw draw);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/StartDraw", ReplyAction="http://tempuri.org/IService1/StartDrawResponse")]
        System.Threading.Tasks.Task<ServiceReference1.DTO_OpenDraws> StartDrawAsync(ServiceReference1.DTO_OpenDraws draw);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDrawCategories", ReplyAction="http://tempuri.org/IService1/GetDrawCategoriesResponse")]
        System.Threading.Tasks.Task<ServiceReference1.DTO_GameCategory[]> GetDrawCategoriesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public interface IService1Channel : ServiceReference1.IService1, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ServiceReference1.IService1>, ServiceReference1.IService1
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public Service1Client() : 
                base(Service1Client.GetDefaultBinding(), Service1Client.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IService1.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), Service1Client.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> GetDoodleUserAsync(int userID)
        {
            return base.Channel.GetDoodleUserAsync(userID);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.DTO_Users> AddUserAsync(ServiceReference1.DTO_Users u)
        {
            return base.Channel.AddUserAsync(u);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.DTO_Users[]> GetAllUsersAsync()
        {
            return base.Channel.GetAllUsersAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.DTO_Users> LoginAsync(ServiceReference1.DTO_Login login)
        {
            return base.Channel.LoginAsync(login);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.DTO_OpenDraws[]> GatherOpenDrawsAsync()
        {
            return base.Channel.GatherOpenDrawsAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.DTO_Guess> CheckGuessAsync(ServiceReference1.DTO_Guess guess)
        {
            return base.Channel.CheckGuessAsync(guess);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.DTO_JoinDraw> JoinDrawAsync(ServiceReference1.DTO_JoinDraw join)
        {
            return base.Channel.JoinDrawAsync(join);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.DTO_Winner> SetWinnerAsync(ServiceReference1.DTO_Winner winner)
        {
            return base.Channel.SetWinnerAsync(winner);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.DTO_OpenDraws> CreateDrawAsync(ServiceReference1.DTO_NewDraw draw)
        {
            return base.Channel.CreateDrawAsync(draw);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.DTO_OpenDraws> StartDrawAsync(ServiceReference1.DTO_OpenDraws draw)
        {
            return base.Channel.StartDrawAsync(draw);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.DTO_GameCategory[]> GetDrawCategoriesAsync()
        {
            return base.Channel.GetDrawCategoriesAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService1))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService1))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:54563/Service1.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return Service1Client.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IService1);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return Service1Client.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IService1);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IService1,
        }
    }
}
